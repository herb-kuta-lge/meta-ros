# Generated by superflore -- DO NOT EDIT
#
# Copyright 2019 Open Source Robotics Foundation

inherit ros_distro_${ROS_DISTRO}
inherit ros_superflore_generated

DESCRIPTION = "This package provides an interface for operating the schunk dexterous hand (SDH), including the tactile sensors."
AUTHOR = "Florian Weisshardt <fmw@ipa.fhg.de>"
ROS_AUTHOR = "Mathias Luedtke <mdl@ipa.fhg.de>"
HOMEPAGE = "http://ros.org/wiki/schunk_sdh"
SECTION = "devel"
LICENSE = "Apache-2.0"
LIC_FILES_CHKSUM = "file://package.xml;beginline=6;endline=6;md5=3dce4ba60d7e51ec64f3c3dc18672dd3"

ROS_CN = "schunk_modular_robotics"
ROS_BPN = "schunk_sdh"

ROS_BUILD_DEPENDS = " \
    ${ROS_UNRESOLVED_PLATFORM_PKG_dpkg} \
    ${ROS_UNRESOLVED_PLATFORM_PKG_libusb-dev} \
    actionlib \
    boost \
    cob-srvs \
    control-msgs \
    diagnostic-msgs \
    libntcan \
    libpcan \
    message-generation \
    roscpp \
    roslint \
    sdhlibrary-cpp \
    sensor-msgs \
    std-msgs \
    std-srvs \
    trajectory-msgs \
    urdf \
"

ROS_BUILDTOOL_DEPENDS = " \
    catkin-native \
"

ROS_EXPORT_DEPENDS = " \
    ${ROS_UNRESOLVED_PLATFORM_PKG_dpkg} \
    ${ROS_UNRESOLVED_PLATFORM_PKG_libusb-dev} \
    actionlib \
    boost \
    cob-srvs \
    control-msgs \
    diagnostic-msgs \
    libntcan \
    libpcan \
    roscpp \
    sdhlibrary-cpp \
    sensor-msgs \
    std-msgs \
    std-srvs \
    trajectory-msgs \
    urdf \
"

ROS_BUILDTOOL_EXPORT_DEPENDS = ""

ROS_EXEC_DEPENDS = " \
    ${ROS_UNRESOLVED_PLATFORM_PKG_dpkg} \
    ${ROS_UNRESOLVED_PLATFORM_PKG_libusb-dev} \
    actionlib \
    boost \
    cob-srvs \
    control-msgs \
    diagnostic-msgs \
    libntcan \
    libpcan \
    message-runtime \
    roscpp \
    sdhlibrary-cpp \
    sensor-msgs \
    std-msgs \
    std-srvs \
    trajectory-msgs \
    urdf \
"

# Currently informational only -- see http://www.ros.org/reps/rep-0149.html#dependency-tags.
ROS_TEST_DEPENDS = ""

DEPENDS = "${ROS_BUILD_DEPENDS} ${ROS_BUILDTOOL_DEPENDS}"
# Bitbake doesn't support the "export" concept, so build them as if we needed them to build this package (even though we actually
# don't) so that they're guaranteed to have been staged should this package appear in another's DEPENDS.
DEPENDS += "${ROS_EXPORT_DEPENDS} ${ROS_BUILDTOOL_EXPORT_DEPENDS}"

RDEPENDS_${PN} += "${ROS_EXEC_DEPENDS}"

SRC_URI = "https://github.com/ipa320/schunk_modular_robotics-release/archive/release/melodic/schunk_sdh/0.6.13-2.tar.gz;downloadfilename=${ROS_SP}.tar.gz"
SRC_URI[md5sum] = "2e655cc203a835478179c6f02b256a2c"
SRC_URI[sha256sum] = "f6010706d4c01738c29727fda87e6ec606db39057bdffd58473af3d4629bb3e5"
S = "${WORKDIR}/schunk_modular_robotics-release-release-melodic-schunk_sdh-0.6.13-2"

ROS_COMPONENT_TYPE = "${@ros_distro__get_component_type('schunk-modular-robotics', d)}"
ROS_BUILD_TYPE = "catkin"

# Allow the above settings to be overridden.
ROS_INCLUDES_TREE := "${@ros_superflore_generated__get_includes_tree('schunk-modular-robotics', d)}"
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/schunk-modular-robotics/schunk-modular-robotics_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/schunk-modular-robotics/schunk-modular-robotics-${PV}_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/schunk-modular-robotics/${BPN}.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/schunk-modular-robotics/${BPN}-${PV}.inc

inherit ${ROS_COMPONENT_TYPE}_component
inherit ros_${ROS_BUILD_TYPE}
